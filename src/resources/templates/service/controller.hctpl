<?php

declare(strict_types = 1);

namespace {namespace};

use {serviceNs}\{serviceName}Service;
use HoneyComb\Core\Http\Controllers\HCBaseController;
use HoneyComb\Core\Http\Controllers\Traits\HCAdminListHeaders;
use HoneyComb\Starter\Helpers\HCFrontendResponse;
use Illuminate\Database\Connection;
use Illuminate\Http\JsonResponse;
use Illuminate\View\View;

class {serviceName}Controller extends HCBaseController
{
    use HCAdminListHeaders;

    /**
     * @var {serviceName}Service
     */
    protected $service;

    /**
     * @var Connection
     */
    private $connection;

    /**
     * @var HCFrontendResponse
     */
    private $response;

    /**
     * {serviceName}Controller constructor.
     * @param Connection $connection
     * @param HCFrontendResponse $response
     * @param {serviceName}Service $service
     */
    public function __construct(Connection $connection, HCFrontendResponse $response, {serviceName}Service $service)
    {
        $this->connection = $connection;
        $this->response = $response;
        $this->service = $service;
    }

    /**
     * Admin panel page view
     *
     * @return View
     */
    public function index(): View
    {
        $config = [
            'title' => trans('{translationLabel}'),
            'url' => route('admin.api.{url}'),
            'form' => route('admin.api.form-manager', ['{formName}']),
            'headers' => $this->getTableColumns(),
            'actions' => $this->getActions('{actionPrefix}'),
        ];

        return view('HCCore::admin.service.index', ['config' => $config]);
    }

    /**
         * Get admin page table columns settings
         *
         * @return array
         */
        public function getTableColumns(): array
        {
            $columns = [
                {columnList}
            ];

            return $columns;
        }
}